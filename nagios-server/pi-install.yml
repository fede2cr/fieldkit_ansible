---
- hosts: pi
  vars_files:
    - ../vars/network_ips.yml
  tasks:
    - name: Adding Zerotier gpg key
      apt_key:
        url: https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg
        state: present
        keyring: /etc/apt/trusted.gpg.d/zerotier.gpg
      become: yes
    - name: Adding Unifi gpg key
      apt_key:
        url: https://dl.ui.com/unifi/unifi-repo.gpg
        state: present
        keyring: /etc/apt/trusted.gpg.d/unifi.gpg
      become: yes
    - name: Adding Zerotier apt repo
      apt_repository:
        repo: deb https://download.zerotier.com/debian/buster buster stable main
      become: yes
    - name: Adding Unifi apt repo
      apt_repository:
        repo: deb https://www.ui.com/downloads/unifi/debian stable ubiquiti
      become: yes
    - name: Updates packages
      apt:
        update_cache: yes
      become: yes
    - name: Upgrades packages
      apt:
        upgrade: dist
      become: yes

    # RTC
    - name: Installs packages for RTC
      apt:
        pkg:
          - python-smbus
          - i2c-tools
        state: latest
      become: yes
    - name: Enables i2c with raspi-config for RTC
      ansible.builtin.command:
        cmd:  "raspi-config nonint do_i2c 1"
      become: yes
    - name: Configures boot.txt for RTC
      ansible.builtin.lineinfile:
        path: "/boot/config.txt"
        regex: '^dtoverlay=i2c-rtc,ds3231'
        line: 'dtoverlay=i2c-rtc,ds3231'
      become: yes
    - name: Removes packages for RTC
      apt:
        pkg:
          - fake-hwclock
        state: absent
      become: yes
    - name: Disabling fake-hwclock service for RTC
      ansible.builtin.systemd:
        enabled: no
        name: fake-hwclock
      become: yes
    - name: Copies udev config for real RTC
      ansible.builtin.copy:
        src: ../files/hwclock-set
        dest: /lib/udev/hwclock-set
        owner: root
        group: root
        mode: '0644'
      become: yes
    - name: Reboots to apply RTC
      reboot:
      become: yes
        # Tests
        #i2cdetect -y 1
        #    -> UU
        #  hwclock -r


    # UniFi Controller (for router)
    - name: Installs unifi controller
      apt:
        pkg:
          - haveged
          - openjdk-8-jre-headless
          - unifi
        state: latest
      become: yes

    # zerotier
    - name: Installs zerotier package
      apt:
        name: zerotier-one
        state: latest
      become: yes
    - name: Joins network
      ansible.builtin.command:
        cmd:  "zerotier-cli join {{ zerotier_network_id }}"
      become: yes
      register: zerotier_join
    - name: Prints zerotier join output
      debug:
        var: zerotier_join
    - name: Prints instructions for zerotier auth
      debug:
        msg: |
          "Go to https://my.zerotier.com/network/{{ zerotier_network_id }}"
          "And authorize the new joined device"
    - name: Pausing for zerotier auth
      wait_for:
        path: "/var/lib/zerotier-one/networks.d/{{ zerotier_network_id }}.conf"
    - name: Verifying zerotier status
      ansible.builtin.command:
        cmd: zerotier-cli status
      register: zerotier_status
      retries: 5
      until: zerotier_status.stdout.find("ONLINE")
      become: yes
    - name: Reboots to apply Zerotier
      reboot:
      become: yes


    # nagios-core
    - name: Installs nagios core
      apt:
        pkg:
          - nagios4
          - snmp
          - snmp-mibs-downloader
        state: latest
      become: yes
    - name: Removes snmp default config
      ansible.builtin.file:
        state: absent
        path: /etc/snmp/snmp.conf
      become: yes
    - name: Apache config for nagios
      ansible.builtin.command:
        cmd: "{{ item }}"
      loop: 
        - a2enmod auth_digest
        - a2enmod authz_groupfile
      become: yes
    - name: Restarting apache
      ansible.builtin.systemd:
        state: restarted
        name: apache2
      become: yes

    # nagios-rules
    - name: Creating nagios rules for hosts 
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        # Research node
        - { src: ./templates/research-gw.cfg.j2, dest: "/etc/nagios4/conf.d/research-gw.cfg" }
        - { src: ./templates/research-loragw.cfg.j2, dest: "/etc/nagios4/conf.d/research-loragw.cfg" }
        - { src: ./templates/research-poeswitch.cfg.j2, dest: "/etc/nagios4/conf.d/research-poeswitch.cfg" }
        - { src: ./templates/p2p-research-buoamir.cfg.j2, dest: "/etc/nagios4/conf.d/p2p-research-buoamir.cfg" }
#        - { src: ./templates/p2p_research_david.cfg.j2, dest: "/etc/nagios4/conf.d/p2p_research_david.cfg" }
#        - { src: ./templates/p2p_research_musafelli.cfg.j2, dest: "/etc/nagios4/conf.d/p2p_research_musafelli.cfg" }
        # Buoamir node
#        - { src: ./templates/p2p_buoamir_research.cfg.j2, dest: "/etc/nagios4/conf.d/p2p_buoamir_research.cfg" }
#        - { src: ./templates/buoamir_loragw.cfg.j2, dest: "/etc/nagios4/conf.d/buoamir_loragw.cfg" }
        # David node
#        - { src: ./templates/p2p_david_research.cfg.j2, dest: "/etc/nagios4/conf.d/p2p_david_research.cfg" }
#        - { src: ./templates/david_loragw_ip.cfg.j2, dest: "/etc/nagios4/conf.d/david_loragw_ip.cfg" }
        # Musafelli node
#        - { src: ./templates/p2p_musafelli_research.cfg.j2, dest: "/etc/nagios4/conf.d/p2p_musafelli_research.cfg" }
#        - { src: ./templates/musafelli_loragw_ip.j2, dest: "/etc/nagios4/conf.d/musafelli_loragw_ip.cfg" }
      become: yes
    - name: Applies hosts
      ansible.builtin.command:
        cmd: nagios4 -v /etc/nagios4/nagios.cfg
      become: yes
    - name: Restarting nagios4
      ansible.builtin.systemd:
        state: restarted
        name: nagios4
      become: yes

        #    # filesystem-ro
        #    - name: Disable services for RO
        #      systemd:
        #        state: stopped
        #        enabled: no
        #        name: "{{ item }}"
        #      loop:
        #          - bootlogs
        #          - console-setup
        #      become: yes
        #
        #    - name: Replaces log service
        #      apt:
        #        name: busybox-syslogd
        #        state: latest
        #      become: yes
        #
        #    - name: Adds ro to cmdline.txt
        #      ansible.builtin.template:
        #        src: ../templates/cmdline.txt.j2
        #        dest: /boot/cmdline.txt
        #      become: yes
        #
        #    - name: Deletes files for RO
        #      ansible.builtin.file:
        #        state: absent
        #        path: "{{ item }}"
        #      loop:
        #        - /var/lib/dhcp
        #        - /var/lib/dhcpcd5
        #        - /var/run
        #        - /var/spool
        #        - /var/lock
        #        - /etc/resolv.conf
        #        - /var/lib/systemd/random-seed
        #      become: yes
        #
        #    - name: Creates links for RO
        #      ansible.builtin.file:
        #        src: '{{ item.src }}'
        #        dest: '{{ item.dest }}'
        #        state: link
        #        force: yes
        #      loop:
        #        - { src: /tmp, dest: /var/lib/dhcp }
        #        - { src: /tmp, dest: /var/lib/dhcpcd5 }
        #        - { src: /tmp, dest: /var/run }
        #        - { src: /tmp, dest: /var/spool }
        #        - { src: /tmp, dest: /var/lock }
        #        - { src: /tmp, dest: /tmp/dhcpcd.resolv.conf }
        #        - { src: /var/lib/systemd/random-seed, dest: /tmp/random-seed }
        #      become: yes
        #
        #    - name: Creates fstab with RO
        #      ansible.builtin.template:
        #        src: ../templates/fstab.j2
        #        dest: /etc/fstab
        #      become: yes
        #
        #    - name: Copies systemd random-seed service conf for RO
        #      ansible.builtin.copy:
        #        src: ../files/systemd-random-seed.service
        #        dest: /lib/systemd/system/systemd-random-seed.service 
        #        owner: root
        #        group: root
        #        mode: '0644'
        #      become: yes
        #
        #    - name: Creates empty resolv.conf for RO
        #      ansible.builtin.file:
        #        path: /tmp/dhcpcd.resolv.conf
        #        state: touch
        #
        #    - name: Systemd reload for RO
        #      systemd: daemon_reload=yes
        #      become: yes
        #
        #

    # nagios filesystem-ro sync
    
    
    
    # apcupsd
    - name: Installs control software for UPS
      apt:
        name: apcupsd
        state: latest
      become: yes
    - name: Copies apcupsd configuration
      ansible.builtin.copy:
        src: ../files/apcupsd.conf
        dest: /etc/apcupsd/apcupsd.conf
        owner: root
        group: root
        mode: '0644'
      become: yes
    - name: Restarts ups software to apply changes
      systemd:
        state: restarted
        name: apcupsd
      become: yes

    # powerstrip-control
    - name: Installs packages for powerstrip-control
      apt:
        pkg:
          - python3-pip
        state: latest
      become: yes
    - name: Installs python packages for powerstrip-control
      pip:
        name: ansible
      become: yes
    - name: Creates POE startup service
      copy:
        dest: "/etc/systemd/system/poe-startup.service"
        content: |
          [Unit]
          Description=POE Switch startup
          After=network.target
          StartLimitIntervalSec=0
          [Service]
          Type=simple
          User=pi
          WorkingDirectory=/usr/local/fieldkit_ansible
          ExecStart=/usr/local/bin/ansible-playbook poe-switch/soft_poweroff.yml --tags="poweron"
          ExecStartPre=/bin/sleep 70 
          [Install]
          WantedBy=multi-user.target
      become: yes
    - name: Systemd reload for POE startup
      systemd: daemon_reload=yes
      become: yes
    - name: Enables services for POE startup
      systemd:
        enabled: yes
        name: poe-startup
      become: yes
    - name: Reboots to test POE startup
      reboot:
      become: yes
